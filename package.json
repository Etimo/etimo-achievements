{
  "name": "root",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "api": "lerna run --scope @etimo-achievements/api start",
    "build": "lerna run build",
    "clean": "lerna run clean",
    "clear": "lerna run clear && rimraf node_modules",
    "compile": "lerna run compile",
    "compile-test": "lerna run compile-test",
    "db-create": "docker exec -it -e PGPASSWORD=root achievements-pg psql -U root -c \"CREATE DATABASE achievements\"",
    "db-drop": "docker exec -it -e PGPASSWORD=root achievements-pg psql -U root -c \"DROP DATABASE achievements\"; exit 0",
    "db-recreate": "npm run db-drop; npm run db-create",
    "db-reset": "npm run db-recreate && npm run migration-apply && npm run seed-run",
    "db-reset-force": "docker-compose stop pgadmin; docker-compose up -d postgres && sleep 10 && npm run db-reset && docker-compose up -d pgadmin",
    "docker-build": "./.docker/scripts/build.sh --no-base",
    "docker-rebuild": "./.docker/scripts/build.sh --nodemon",
    "env": "cp -n packages/api/.env.example packages/api/.env",
    "env-force": "cp packages/api/.env.example packages/api/.env",
    "first-run": "npm run env && npm run docker-rebuild && npm run support && sleep 10 && npm run db-create && npm run migration-apply && npm run seed-run && npm run start",
    "install-deps": "sudo npm install -g jest knex lerna rimraf ts-node typescript && yarn install",
    "lint": "eslint --config .eslintrc.json --fix packages/**/*.ts",
    "migration-apply": "cd packages/data && npm run migration-apply",
    "migration-new": "cd packages/data && npm run migration-new",
    "migration-revert": "cd packages/data && npm run migration-revert",
    "openapi": "cd packages/api && npm run openapi",
    "prepare": "husky install && ./scripts/update-references.sh",
    "prettier": "prettier --write .",
    "reset": "npm run clear && yarn install && npm run docker-rebuild && npm run compile",
    "restart": "docker stop $(docker ps -aq --filter 'label=com.etimo-achievements.monitored') && npm run build && npm run start",
    "seed-new": "cd packages/data && npm run seed-new",
    "seed-run": "cd packages/data && npm run seed-run",
    "start": "docker-compose up -d --build && docker-compose logs --tail 100 -f",
    "start-fresh": "yarn install && npm run build && npm run openapi && npm run docker-rebuild && npm run start",
    "support": "docker-compose up -d --build postgres pgadmin nodemon",
    "test": "./scripts/run-script.sh test",
    "test-integration": "./scripts/run-script.sh test-integration"
  },
  "devDependencies": {
    "@tsconfig/node14": "^1.0.1",
    "@typescript-eslint/eslint-plugin": "^4.32.0",
    "@typescript-eslint/parser": "^4.32.0",
    "eslint": "^7.32.0",
    "eslint-config-google": "^0.14.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-react": "^7.26.0",
    "husky": "^7.0.2",
    "lerna": "^4.0.0",
    "lint-staged": "^11.1.2",
    "prettier": "^2.4.1",
    "typescript": "^4.4.3"
  },
  "lint-staged": {
    "**/*": "prettier --write --ignore-unknown"
  }
}

name: Deploy to Staging K8S

concurrency: staging_kubernetes

on:
  push:
    branches: [kubernetes]

defaults:
  run:
    shell: bash

env:
  API_PORT: 3000
  API_URL: https://achievements.staging.etimo-test.live/api
  API_ROOT: /api/
  DB_PORT: 1433
  DB_SSL: true
  FRONTEND_URL: https://achievements.staging.etimo-test.live
  GOOGLE_REDIRECT_URI: https://achievements.staging.etimo-test.live/login/callback
  INGRESS_URL: achievements.staging.etimo-test.live
  NODE_ENV: staging
  WEB_PORT: 3001
  # Stored as environment secrets
  API_KEY: ${{ secrets.API_KEY }}
  COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
  DB_HOSTNAME: ${{ secrets.DB_HOSTNAME }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  # Stored as repository secrets
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  KUBECONFIG: ${{ secrets.KUBECONFIG }}
  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
  # Stored as organisation secrets
  GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}

jobs:
  deploy:
    name: 'Deploy to Staging K8S'
    runs-on: ubuntu-latest
    environment: staging
    env:
      KUBERNETES_NAMESPACE: achievements

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Login to GitHub registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/etimo
          username: ${{ github.repository_owner }}
          password: ${{ env.GH_PACKAGES_TOKEN }}

      - name: Setup cache
        uses: ./.github/actions/setup-cache

      - name: Build & push base image
        uses: ./.github/actions/docker-build-push
        with:
          dockerfile: base
          image-name: etimo-achievements/base
          target: base
          tag: latest

      - name: Build & push api image
        uses: ./.github/actions/docker-build-push
        with:
          registry: docker.io
          dockerfile: api
          image-name: niclaslindstedt/etimo-achievements-api
          target: production
          tag: latest

      - name: Build & push web image
        uses: ./.github/actions/docker-build-push
        with:
          registry: docker.io
          dockerfile: web
          image-name: niclaslindstedt/etimo-achievements-web
          target: production
          tag: latest

      - name: Deploy to Kubernetes
        uses: ./.github/actions/deploy-kubernetes
        with:
          kubeconfig: ${{ env.KUBECONFIG }}
          namespace: ${{ env.KUBERNETES_NAMESPACE }}
          ingress-url: ${{ env.INGRESS_URL }}
          tag: ${{ github.sha }}
          wait: api-deployment,web-deployment

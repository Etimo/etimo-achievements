name: Deploy to Staging K8S

concurrency: staging_kubernetes

on:
  push:
    branches: [kubernetes] #todo: master

defaults:
  run:
    shell: bash

env:
  API_PORT: 3000
  API_URL: https://achievements.staging.etimo-test.live/api
  API_ROOT: /api/
  DEBUG: true
  FRONTEND_URL: https://achievements.staging.etimo-test.live
  GOOGLE_REDIRECT_URI: https://achievements.staging.etimo-test.live/login/callback
  INGRESS_URL: achievements.staging.etimo-test.live
  NODE_ENV: staging
  WEB_PORT: 3001
  # Stored as environment secrets
  API_KEY: ${{ secrets.API_KEY }}
  COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  # Stored as repository secrets
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  KUBECONFIG: ${{ secrets.KUBECONFIG }}
  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
  # Stored as organisation secrets
  GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}

jobs:
  deploy:
    name: 'Deploy to Staging K8S'
    runs-on: ubuntu-latest
    environment: staging
    env:
      DEFAULT_BRANCH: kubernetes #todo: master
      KUBERNETES_NAMESPACE: achievements
      RELEASE: ${{ github.sha }}

    steps:
      - name: Determine branch
        id: branch
        run: |
          echo "::set-output name=checkout-branch::$DEFAULT_BRANCH"
          manual="${{ github.event.inputs.branch }}"
          [[ ! -z "$manual" ]] && echo "::set-output name=checkout-branch::$manual"
          exit 0

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: 'refs/heads/${{ steps.branch.outputs.checkout-branch }}'

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Login to GitHub registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/etimo
          username: ${{ github.repository_owner }}
          password: ${{ env.GH_PACKAGES_TOKEN }}

      - name: Setup cache
        uses: ./.github/actions/setup-cache

      - name: Build & push migrate image
        uses: ./.github/actions/docker-build-push
        with:
          dockerfile: migrate
          image-name: niclaslindstedt/etimo-achievements-migrate
          target: production
          tag: latest

      - name: Deploy database migration job
        id: deploy-init
        uses: ./.github/actions/deploy-kubernetes
        with:
          kubeconfig: ${{ env.KUBECONFIG }}
          namespace: ${{ env.KUBERNETES_NAMESPACE }}
          object-path: .kubernetes/.init/migrate

      - name: Build & push base image
        uses: ./.github/actions/docker-build-push
        with:
          registry: ghcr.io/etimo
          dockerfile: base
          image-name: etimo-achievements/base
          target: base
          tag: latest

      - name: Build & push api image
        uses: ./.github/actions/docker-build-push
        with:
          dockerfile: api
          image-name: niclaslindstedt/etimo-achievements-api
          target: production
          tag: latest

      - name: Build & push web image
        uses: ./.github/actions/docker-build-push
        with:
          dockerfile: web
          image-name: niclaslindstedt/etimo-achievements-web
          target: production
          tag: latest

      - name: Verify database migrations
        uses: ./.github/actions/verify-migrations
        with:
          migration-object: ${{ steps.deploy-init.outputs.deployment-yaml }}
          kubeconfig: ${{ env.KUBECONFIG }}
          namespace: ${{ env.KUBERNETES_NAMESPACE }}

      - name: Deploy application
        uses: ./.github/actions/deploy-kubernetes
        with:
          kubeconfig: ${{ env.KUBECONFIG }}
          namespace: ${{ env.KUBERNETES_NAMESPACE }}
          ingress-url: ${{ env.INGRESS_URL }}
          ignore-path: .kubernetes/.init
          wait: api-deployment,web-deployment

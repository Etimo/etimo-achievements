name: CI

concurrency: staging

on:
  push:
    branches: [master]
    paths:
      - '.docker/**'
      - '.kubernetes/**'
      - '.github/**'
      - 'packages/**'
      - '!packages/**/*.md'
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: 'Build images'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/etimo
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Setup cache
        uses: ./.github/actions/setup-cache

      - name: Build base image
        uses: ./.github/actions/docker-build-push
        with:
          registry: ghcr.io/etimo
          dockerfile: base
          image-name: etimo-achievements/base
          target: base
          tag: latest

      - name: Build api image
        uses: ./.github/actions/docker-build-push
        with:
          dockerfile: api
          image-name: etimo-achievements/api-ci
          push: false

      - name: Build web image
        uses: ./.github/actions/docker-build-push
        with:
          dockerfile: web
          image-name: etimo-achievements/web-ci
          push: false

      - name: Build migrate image
        uses: ./.github/actions/docker-build-push
        with:
          dockerfile: migrate
          image-name: etimo-achievements/migrate-ci
          push: false

  test:
    name: 'Run tests'
    runs-on: ubuntu-latest
    container:
      image: node:14
    env:
      NODE_ENV: development
      DB_MAIN_PRIVATE_HOST: postgres
      DB_MAIN_NAME: root
      DB_MAIN_USER: root
      DB_MAIN_PASSWORD: postgres

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ env.DB_MAIN_NAME }}
          POSTGRES_USER: ${{ env.DB_MAIN_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_MAIN_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Migrate & seed database
        uses: ./.github/actions/migrate-database
        with:
          hostname: ${{ env.DB_MAIN_PRIVATE_HOST }}
          port: ${{ job.services.postgres.ports[5432] }}
          database: ${{ env.DB_MAIN_NAME }}
          username: ${{ env.DB_MAIN_USER }}
          password: ${{ env.DB_MAIN_PASSWORD }}
          environment: ${{ env.NODE_ENV }}

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run unit tests
        run: npm run test

      - name: Run integration tests
        run: npm run test-integration

  checks:
    name: 'Check for mistakes'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate OpenAPI spec
        run: npm run generate-openapi

      - name: Generate jest configs
        run: npm run generate-jest

      - name: Generate TypeScript configs
        run: npm run generate-references

      - name: Check for changed files
        uses: tj-actions/verify-changed-files@v8.3
        id: changed-files
        with:
          files: |
            openapi.json
            package.json

      - name: Files changed
        if: steps.changed-files.outputs.files_changed == 'true'
        run: |
          echo "Changed files: ${{ steps.changed-files.outputs.changed_files }}"
          exit 1

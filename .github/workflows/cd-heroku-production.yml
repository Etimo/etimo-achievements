name: Promote to Production

concurrency: production_environment

on:
  workflow_dispatch:
    inputs:
      verify:
        description: 'Are you sure? Type "YES"'
        required: true

defaults:
  run:
    shell: bash

jobs:
  promote:
    if: github.event.inputs.verify == 'YES'
    name: 'Promote to Production'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    environment: production
    env:
      DEFAULT_BRANCH: master
      STAGING_URL: https://etimo-achievements-staging.herokuapp.com
      PRODUCTION_URL: https://etimo-achievements.herokuapp.com
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_REGISTRY: registry.heroku.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Heroku registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.HEROKU_REGISTRY }}
          username: _
          password: ${{ secrets.HEROKU_API_KEY }}

      - name: Check if staging is newer than production
        id: commit
        shell: bash
        # outputs "differs" == "true" if there are differences
        run: ./.github/scripts/compare-environments.sh ${{ env.STAGING_URL }} ${{ env.PRODUCTION_URL }}

      - name: Tag release
        id: tag
        if: steps.commit.outputs.differs == 'true'
        shell: bash
        # outputs "tagged" == "true" if the tag was created
        run: ./.github/scripts/tag-release.sh ${{ steps.commit.outputs.sha }}

      - name: Promote Docker image
        if: steps.tag.outputs.tagged == 'true'
        uses: ./.github/actions/docker-promote
        with:
          registry: ${{ env.HEROKU_REGISTRY }}
          from-image-name: etimo-achievements-staging/web
          to-image-name: etimo-achievements/web

      - name: Deploy to Heroku
        if: steps.tag.outputs.tagged == 'true'
        shell: bash
        run: heroku container:release web --app etimo-achievements

      - name: Migrate database
        if: steps.tag.outputs.tagged == 'true'
        uses: ./.github/actions/migrate-database
        with:
          database: ${{ secrets.DB_NAME }}
          hostname: ${{ secrets.DB_HOSTNAME }}
          username: ${{ secrets.DB_USERNAME }}
          password: ${{ secrets.DB_PASSWORD }}

      - name: Verify release
        run: ./scripts/verify-release.sh production ${{ steps.commit.outputs.sha }}

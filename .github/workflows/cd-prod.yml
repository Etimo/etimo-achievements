name: Production

concurrency: production

on:
  workflow_dispatch:
    inputs:
      verify:
        description: 'Are you sure? Type "YES"'
        required: true

defaults:
  run:
    shell: bash

env:
  API_URL: https://achievements-live.staging.etimo-test.live/api
  FRONTEND_URL: https://achievements-live.staging.etimo-test.live
  GOOGLE_REDIRECT_URI: https://achievements-live.staging.etimo-test.live/login/callback
  INGRESS_URL: achievements-live.staging.etimo-test.live
  NODE_ENV: production
  PGADMIN_URL: achievements-live-pgadmin.staging.etimo-test.live
  # Stored as environment secrets
  API_KEY: ${{ secrets.API_KEY }}
  COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
  PGADMIN_DEFAULT_EMAIL: ${{ secrets.PGADMIN_DEFAULT_EMAIL }}
  PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  # Stored as repository secrets
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  KUBECONFIG: ${{ secrets.KUBECONFIG }}
  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
  # Stored as organisation secrets
  GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
  # Pretty much static variables
  API_PORT: 3000
  API_ROOT: /api/
  DEBUG: false
  WEB_PORT: 3001

jobs:
  deploy:
    if: github.event.inputs.verify == 'YES'
    name: 'Deploy to Production'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: production
    env:
      KUBERNETES_NAMESPACE: achievements-live
      RELEASE: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy database migration job
        id: deploy-init
        uses: ./.github/actions/deploy-kubernetes
        with:
          kubeconfig: ${{ env.KUBECONFIG }}
          namespace: ${{ env.KUBERNETES_NAMESPACE }}
          object-path: .kubernetes/.init/migrate

      - name: Verify database migrations
        uses: ./.github/actions/verify-migrations
        with:
          migration-object: ${{ steps.deploy-init.outputs.deployment-yaml }}
          kubeconfig: ${{ env.KUBECONFIG }}
          namespace: ${{ env.KUBERNETES_NAMESPACE }}

      - name: Deploy application
        uses: ./.github/actions/deploy-kubernetes
        with:
          kubeconfig: ${{ env.KUBECONFIG }}
          namespace: ${{ env.KUBERNETES_NAMESPACE }}
          ignore-path: .kubernetes/.init
          wait: api-deployment,web-deployment
